@model VgSalud.Models.E_HorarioMedico

@{
    ViewBag.Title = "VerHorario";
    var listaHorarios = (List<VgSalud.Models.E_HorarioMedico>)ViewBag.listaHorarios;
}

<script src="~/plugins/jQuery/jquery-2.2.3.min.js"></script>
<script src="~/Content/Scripts/bootstrap.min.js"></script>
<script src="https://code.jquery.com/ui/1.11.4/jquery-ui.min.js"></script>
<script src="~/plugins/slimScroll/jquery.slimscroll.min.js"></script>
<script src="~/plugins/fastclick/fastclick.js"></script>
<script src="~/dist/js/app.min.js"></script>
<script src="~/dist/js/demo.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.11.2/moment.min.js"></script>
<script src="~/plugins/fullcalendar/fullcalendar.min.js"></script>

<div class="content-wrapper">
    <section class="content-header">
        <h1>
            Medico
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Medico</a></li>
            <li class="active">Horario Medico</li>
        </ol>
    </section>
    <section class="content">
        <div class="row">
            <div class="col-md-12">
                <div class="box box-primary">
                    <div class="box-body no-padding">
                        <div id="calendar"></div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>







<script>
    $(function () {

        function ini_events(ele) {
            ele.each(function () {

                // create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)
                var eventObject = {
                    title: $.trim($(this).text())
                };

                $(this).data('eventObject', eventObject);

                $(this).draggable({
                    zIndex: 1070,
                    revert: true, // will cause the event to go back to its
                    revertDuration: 0  //  original position after the drag
                });

            });
        }

        ini_events($('#external-events div.external-event'));

        var date = new Date();
        var d = date.getDate(),
            m = date.getMonth(),
            y = date.getFullYear();
        $('#calendar').fullCalendar({
            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'month,agendaWeek,agendaDay'
            },
            buttonText: {
                today: 'today',
                month: 'month',
                week: 'week',
                day: 'day'
            },
            //Random default events
            events: [

              
                  @foreach (var a in listaHorarios) {
                      for(int i = 1; i<=29; i++) {
                          DateTime aa = DateTime.Now;
                          int mes = aa.Month;
                          int año = aa.Year;

                          int horai = a.horaInicio.Hours;
                          int horaf = a.horaFin.Hours;

                          string fechaE = i + "/" + mes + "/" + año;

                          DateTime ff = DateTime.Parse(fechaE);
                          string formato = ff.ToString("dddd").ToUpper();

                          if (a.dia.Equals(formato)) {

                      <text>
                  {
                  title: 'Disponible para atencion',
                  start: new Date(y, m, @i, @horai, 0),
                  end: new Date(y, m, @i, @horaf, 0),
                  allDay: false,
                  backgroundColor: "#00c0ef", 
                  borderColor: "#00c0ef" 
                  },
                       </text>
                          }
                      }
                  
              }
            ],
            editable: true,
            droppable: true, // this allows things to be dropped onto the calendar !!!
            drop: function (date, allDay) { // this function is called when something is dropped

                // retrieve the dropped element's stored Event Object
                var originalEventObject = $(this).data('eventObject');

                // we need to copy it, so that multiple events don't have a reference to the same object
                var copiedEventObject = $.extend({}, originalEventObject);

                // assign it the date that was reported
                copiedEventObject.start = date;
                copiedEventObject.allDay = allDay;
                copiedEventObject.backgroundColor = $(this).css("background-color");
                copiedEventObject.borderColor = $(this).css("border-color");

                // render the event on the calendar
                // the last `true` argument determines if the event "sticks" (http://arshaw.com/fullcalendar/docs/event_rendering/renderEvent/)
                $('#calendar').fullCalendar('renderEvent', copiedEventObject, true);

                // is the "remove after drop" checkbox checked?
                if ($('#drop-remove').is(':checked')) {
                    // if so, remove the element from the "Draggable Events" list
                    $(this).remove();
                }

            }
        });

        /* ADDING EVENTS */
        var currColor = "#3c8dbc"; //Red by default
        //Color chooser button
        var colorChooser = $("#color-chooser-btn");
        $("#color-chooser > li > a").click(function (e) {
            e.preventDefault();
            //Save color
            currColor = $(this).css("color");
            //Add color effect to button
            $('#add-new-event').css({ "background-color": currColor, "border-color": currColor });
        });
        $("#add-new-event").click(function (e) {
            e.preventDefault();
            //Get value and make sure it is not null
            var val = $("#new-event").val();
            if (val.length == 0) {
                return;
            }

            //Create events
            var event = $("<div />");
            event.css({ "background-color": currColor, "border-color": currColor, "color": "#fff" }).addClass("external-event");
            event.html(val);
            $('#external-events').prepend(event);

            //Add draggable funtionality
            ini_events(event);

            //Remove event from text input
            $("#new-event").val("");
        });
    });
</script>